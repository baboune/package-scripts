name:    "centos"
version: "6.4"

sources [
  { url: "http://10.0.0.23:7766/CentOS-6.4-x86_64-LiveCD.iso" }
]

build_depends [ { os: "buildroot" } ]
provides      [ { os: "linux" },
                { os: "rhel" },
                { os: "rhel-6.4" },
                { os: "centos" },
                { os: "centos-6.4" } ]

environment { "PATH": "$PATH:/bin:/sbin:/usr/bin:/usr/sbin" }

snapshot_path "/rootfs/rootfs"

build (
      export BUILDPATH=`pwd`
      export TARGET=/rootfs

      # create loop1
      if [ ! -e /dev/loop1 ]; then
        sudo mknod -m 660 /dev/loop1 b 7 1
        sudo chown root:disk /dev/loop1
      fi

      # create loop2
      if [ ! -e /dev/loop2 ]; then
        sudo mknod -m 660 /dev/loop2 b 7 2
        sudo chown root:disk /dev/loop2
      fi

      # mount the iso
      sudo mkdir tmp1
      sudo losetup /dev/loop1 $BUILDPATH/CentOS-6.4-x86_64-LiveCD.iso
      sudo mount -o loop /dev/loop1 $BUILDPATH/tmp1

      # pull out the squashfs and delete the iso
      cp $BUILDPATH/tmp1/LiveOS/squashfs.img $BUILDPATH/squashfs.img
      sudo umount $BUILDPATH/tmp1
      rm CentOS-6.4-x86_64-LiveCD.iso

      # mount the squashfs
      sudo losetup /dev/loop1 $BUILDPATH/squashfs.img
      sudo mount -o loop -o rw -t squashfs /dev/loop1 $BUILDPATH/tmp1

      # mount the ext3fs under it
      sudo losetup /dev/loop2 $BUILDPATH/tmp1/LiveOS/ext3fs.img
      sudo mkdir tmp2
      sudo mount -o loop -o rw /dev/loop2 $BUILDPATH/tmp2

      # copy all the contents out. this is smaller than copying the .img itself.
      sudo mkdir -p $TARGET
      sudo cp -a $BUILDPATH/tmp2/. $TARGET

      # cleanup things we don't need now
      sudo umount $BUILDPATH/tmp2
      sudo umount $BUILDPATH/tmp1
      rm $BUILDPATH/squashfs.img

      # chroot into the CentOS LiveCD to build a new chroot
      sudo chroot $TARGET /bin/bash <<-EOS

        # update /etc/hosts
        echo -e "127.0.0.1 localhost localhost.localdomain\n127.0.0.1 container" > /etc/hosts

        # update /etc/resolv.conf
        echo -e "domain apcera.me\nnameserver 8.8.8.8" > /etc/resolv.conf

        # create the real chroot rootfs we want
        mkdir /rootfs
        yumdownloader --destdir=/tmp centos-release
        rpm -iv --nodeps --root /rootfs /tmp/centos-release-*.rpm

        # install common applications
        yum -y --installroot /rootfs install yum bzip2 curl wget gawk \
          openssh-clients screen sudo zip unzip crontabs logrotate which \
          passwd perl tar

        # install common libraries
        yum -y --installroot /rootfs install bzip2-libs expat libcurl \
          libevent libicu libxml2 libxslt mysql-libs ncurses openssl pcre \
          postgresql-libs readline sqlite zlib libtar libxml2-python

# this must be at the beginning of the line because the whitespaces carries in,
# and it is expected on a line by itself.
EOS

      # chroot into the new base OS we just created
      sudo chroot $TARGET/rootfs /bin/bash <<-EOS

usermod -d / root


        # enable sudo for the nobody user
        echo "#99 ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers
        sed -i -e '/Defaults\s\+env_reset/a Defaults\texempt_group=nobody' /etc/sudoers
        sed -i -e '/Defaults\s\+env_reset/a Defaults\tenv_keep = "SSH_AUTH_SOCK PATH"' /etc/sudoers
        sed -i -e '/Defaults\s\+requiretty/s/^/# /g' /etc/sudoers

        # clear fstab
        echo "#nothing" > /etc/fstab

        # update /etc/hosts
        echo -e "127.0.0.1 localhost localhost.localdomain\n127.0.0.1 container" > /etc/hosts

        # update /etc/resolv.conf
        echo -e "domain apcera.me\nnameserver 8.8.8.8" > /etc/resolv.conf

        # strip /dev down to the bare minimum
        rm -rf /dev
        mkdir -p /dev

        # minimal devices necessary, do it before calling yum
        (
          cd /dev
          mknod -m 600 console c 5 1
          mknod -m 666 tty c 5 0
          mknod -m 666 random c 1 8
          mknod -m 666 urandom c 1 9
          mknod -m 666 null c 1 3
          mknod -m 666 zero c 1 5
          mknod -m 666 tty0 c 4 0
          mknod -m 666 tty1 c 4 1
          mknod -m 666 tty5 c 4 5
          mknod -m 600 ram0 b 1 0
          mknod -m 666 ptmx c 5 2

          mkdir -m 755 pts

          chown root:tty  console tty*
          chown root:disk ram0

          ln -s /proc/self/fd
          ln -s fd/0 stdin
          ln -s fd/1 stdout
          ln -s fd/2 stderr
        )

        # cleanup
        yum clean all

        # disable unneeded services
        rm -f /etc/init/*plymouth*
        rm -f /etc/init/rcS*
        rm -f /etc/init/rsyslog*
        rm -f /etc/init/serial*

        # remove some uncessary folders
        rm -rf /boot
        rm -rf /home
        rm -rf /media
        rm -rf /mnt
        rm -rf /opt
        rm -rf /root
        rm -rf /tmp
        rm -f /etc/ssh/ssh_host_*

# this must be at the beginning of the line because the whitespaces carries in,
# and it is expected on a line by itself.
EOS
)
